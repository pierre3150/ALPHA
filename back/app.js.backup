import express from 'express';
import 'dotenv/config';
import cors from "cors";
import path from "node:path";
import https from 'https';
import fs from 'fs';
import sequelize from "./database/connection.js";

import mainRouter from "./router/main.router.js";
import authRouter from './router/auth.router.js';

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

const allowedOrigins = [
  "http://localhost:3000",
  "http://10.60.12.114",
];

const options = {
  key: fs.readFileSync('./cert/key.pem'),
  cert: fs.readFileSync('./cert/cert.pem')
};

// Database initialization
(async () => {
    try {
        await sequelize.authenticate();
        console.log("✅ Base de données connectée");

        await sequelize.sync(); // crée les tables si besoin
        console.log("✅ Synchronisation des tables OK");

        https.createServer(options, app).listen(3000, () => {
          console.log('🚀 HTTPS Server running on https://10.60.12.114:3000');
        });
    } catch (error) {
        console.error("❌ Echec de connexion DB:", error);
    }
})();

app.use(
  cors({
    origin: (origin, callback) => {
      if (!origin || allowedOrigins.includes(origin)) {
        callback(null, true);
      } else {
        callback(new Error("Not allowed by CORS"));
      }
    },
    credentials: true,
     methods: ['GET', 'POST', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  })
);

app.use((req, res, next) => {
  console.log(`[${req.method}] ${req.originalUrl}`);
  next();
});

app.use('/auth', authRouter);
app.use('/api', mainRouter);

const PORT = process.env.PORT;
const DB = process.env.DB;
